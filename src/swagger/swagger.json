{
  "openapi": "3.0.0",
  "info": {
    "title": "API Rick and Morty",
    "description": "API contining character from Rick and Morty cartoon",
    "contact": {
      "email": "flavio.alva@outlook.com"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://bluetwitterclone.herokuapp.com",
      "description": "API no Heroku"
    },
    {
      "url": "http://localhost:3001",
      "description": "API local"
    }
  ],
  "paths": {
    "/users/create": {
      "post": {
        "summary": "Create a new user",
        "description": "Route responsible for creating a new user",
        "tags": ["Users"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              },
              "examples": {
                "Users": {
                  "value": {
                    "name": "New User",
                    "username": "newuser",
                    "email": "newuser@email.com",
                    "password": "12345",
                    "photo": "https://img-9gag-fun.9cache.com/photo/a3Q5VW5_460s.jpg"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schemma": {
                  "type": "object",
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "Get all users",
        "description": "Route responsible for getting all users",
        "tags": ["Users"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "400": {
            "description": "Not Found"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Login",
        "description": "Route responsible for creating a new user",
        "tags": ["Auth"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              },
              "examples": {
                "User": {
                  "value": {
                    "email": "newuser@gmail.com",
                    "password": "12345"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/characters/create": {
      "post": {
        "summary": "Create a new character",
        "description": "Route responsible for creating a new character",
        "tags": ["Characters"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Character"
              },
              "examples": {
                "Character": {
                  "user": "",
                  "name": "Rick Sanchez",
                  "imageUrl": "https://rickandmortyapi.com/api/character/avatar/1.jpeg"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schemma": {
                  "type": "object",
                  "$ref": "#/components/schemas/Character"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/characters": {
      "get": {
        "summary": "Get all characters",
        "description": "Route responsible for creating new characters",
        "tags": ["Characters"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "type": "string",
            "description": "Limit"
          },
          {
            "in": "query",
            "name": "offset",
            "type": "string",
            "description": "Offset"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schemma": {
                  "type": "object",
                  "$ref": "#/components/schemas/Character"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/characters/find/{id}": {
      "get": {
        "summary": "Get a character by id",
        "description": "Route responsible for getting a character by ID.",
        "tags": ["Characters"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Character"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/characters/update/{id}": {
      "put": {
        "summary": "Update a character by id",
        "description": "Route responsible for updating a character by ID.",
        "tags": ["Characters"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Character"
              },
              "examples": {
                "Character": {
                  "name": "Rick Sanchez",
                  "imageUrl": "https://rickandmortyapi.com/api/character/avatar/1.jpeg"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Character"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/characters/delete/{id}": {
      "delete": {
        "summary": "Delete a character by id",
        "description": "Route responsible for deleting a character by ID.",
        "tags": ["Characters"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Character"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/characters/search": {
      "get": {
        "summary": "Get all characters that contains a given name.",
        "description": "Route responsible for getting characters containing the search term sent via query params.",
        "tags": ["Characters"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Character"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "photo": {
            "type": "string"
          }
        }
      },
      "Character": {
        "type": "object",
        "properties": {
          "user": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          }
        }
      }
    }
  }
}
